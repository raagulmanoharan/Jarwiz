.custom-navigation {
  position: absolute;
  bottom: 8px;
  left: 8px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 10px;
  z-index: 1000;
}

.zoom-menu {
  background: white;
  border-radius: 12px;
  border: 1px solid rgba(0, 0, 0, 0.05);
  box-shadow: none;
  padding: 8px;
  min-width: 220px;
  margin-bottom: 8px;
  font-family: 'Poppins', sans-serif;
}

.zoom-menu-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  padding: 8px 12px;
  border: none;
  background: none;
  cursor: pointer;
  font-size: 14px;
  color: #202020;
  border-radius: 6px;
  transition: background-color 0.2s;
  letter-spacing: normal;
}

.zoom-menu-item:hover {
  background-color: #f5f5f5;
}

.zoom-menu-item .shortcut {
  color: #999;
  font-size: 13px;
  margin-left: 20px;
}

.zoom-controls {
  display: flex;
  align-items: center;
  gap: 4px;
  background: #EFEFEF;
  border-radius: 12px;
  padding: 6px;
}

.zoom-button {
  width: 32px;
  height: 32px;
  border: none;
  background: none;
  border-radius: 6px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  color: #666;
  transition: all 0.2s;
}

.zoom-button:hover {
  background-color: #f5f5f5;
  color: #202020;
}

.zoom-display {
  min-width: 60px;
  height: 32px;
  border: none;
  background: none;
  border-radius: 6px;
  font-size: 14px;
  font-weight: 400;
  color: #202020;
  cursor: pointer;
  transition: all 0.2s;
  padding: 0 8px;
  font-family: 'Poppins', sans-serif;
  letter-spacing: normal;
}

.zoom-display:hover {
  background-color: #f5f5f5;
}

/* Hide default TLdraw UI elements */
.tlui-navigation-panel {
  display: none !important;
}

.tlui-zoom-menu {
  display: none !important;
}

.tlui-menu-zone {
  display: none !important;
}

.tlui-toolbar {
  display: none !important;
}

.tlui-style-panel {
  display: none !important;
}

/* Reposition TLdraw watermark */
.tlui-helper-buttons {
  bottom: 8px !important;
  right: 8px !important;
  left: auto !important;
}

/* Set canvas background color */
.tl-canvas {
  background-color: #EFEFEF !important;
}

.tl-background {
  background-color: #EFEFEF !important;
}

/* Ensure TLdraw doesn't capture space key events for panning */
.tl-container {
  pointer-events: auto;
}

/* Disable hand tool keyboard shortcut */
.tlui-keyboard-shortcuts-dialog__key-pair:has-text("Space") {
  display: none !important;
}

/* Override TLDraw font families to use Poppins everywhere */
.tl-container {
  --tl-font-draw: 'Poppins', sans-serif !important;
  --tl-font-sans: 'Poppins', sans-serif !important;
  --tl-font-serif: 'Poppins', serif !important;
  --tl-font-mono: 'Poppins', monospace !important;
}

/* Additional text styling overrides */
.tl-text-wrapper[data-font='draw'],
.tl-text-wrapper[data-font='sans'],
.tl-text-wrapper[data-font='serif'],
.tl-text-wrapper[data-font='mono'] {
  font-family: 'Poppins', sans-serif !important;
}

.tl-text,
.tl-text-input,
.tl-text-content,
.tl-text-shape-label {
  font-family: 'Poppins', sans-serif !important;
}

/* Hide ALL resize handles on canvas - comprehensive approach */
.tl-corner-handle,
.tl-resize-handle,
.tl-text-handle,
.tl-corner-crop-handle,
.tl-corner-crop-edge-handle,
.tl-rotate-corner {
  display: none !important;
}

/* Hide user handles overlay */
.tl-user-handles {
  display: none !important;
}

/* Native TLDraw selection outline with consistent corner radius matching cards */

/* Define card radius variable for consistency */
:root {
  --selection-radius: 12px; /* Matches --card-radius from card-shadows.css */
}

/* Apply consistent 12px corner radius to selection and hover rect elements only */
.tl-selection__fg__outline rect,
.tl-shape-indicator rect,
.tl-user-indicator rect,
.tl-collaborator__shape-indicator rect {
  rx: var(--selection-radius) !important;
  ry: var(--selection-radius) !important;
}

/* Fallback for any additional indicator rect elements */
[class*="indicator"] rect,
[class*="selection"] rect {
  rx: var(--selection-radius) !important;
  ry: var(--selection-radius) !important;
}